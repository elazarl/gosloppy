#!/bin/bash

function check {
	[ -f "./$1" ] || (echo no binary $1;false)
	OUT=$(./$@ 2>&1)
	[ SUCCESS = "$OUT" ] || (echo $@ "->" $OUT != SUCCESS;false)
}

function die {
	echo FAILED $@
	exit 1
}

trap 'find . -type f -perm +0111 -not -name all.test|while read f; do rm -f "$f";done' SIGINT SIGTERM EXIT
echo 'Building project'
(cd .. && go build -o gosloppy -a) || die Cannot build project
export GOSLOPPY=$(cd ..;echo `pwd`/gosloppy)
[ -f $GOSLOPPY ] || die gosloppy not built: $GOSLOPPY
find . -maxdepth 1 -name ${@:-test\*} -type d| sort | while read d; do
	echo Testing $d
	(
	cd $d
	export GOPATH=""
	for p in "`pwd`"/gopath*; do
		[ -n "$GOPATH" ] && GOPATH="$GOPATH:"
		GOPATH="${GOPATH}$p"
	done
	if [ -f run.sh ]; then
		source ./run.sh
	elif [ -f buildpkg ]; then
		cat buildpkg | while read line; do
			CMD="$GOSLOPPY $line"
			$CMD || die building $CMD
		done
	else
		CMD="$GOSLOPPY build"
		$CMD || die buidling $CMD
		check $(basename `pwd`) || die $CMD
		CMD="$GOSLOPPY build -o ensure_minus_o"
		$CMD || die buidling $CMD
		check ensure_minus_o || die $CMD
		if ls *_test.go &>/dev/null; then
			$GOSLOPPY test || die $GOSLOPPY test
			$GOSLOPPY test -c || die $GOSLOPPY test -c
			TESTFILE="$(basename `pwd`)";test -f $TESTFILE.test || die test -c don\'t create $TESTFILE
		fi
	fi
	) || die 
done && echo SUCCESS
